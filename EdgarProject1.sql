DROP TABLE ACCOUNTS;
DROP TABLE CUSTOMER;
DROP TABLE EMPLOYEE;
DROP TABLE REIMBURSEMENT;
DROP TABLE MANAGER_SERVICE;

CREATE TABLE EMPLOYEE(
    EMPLOYEE_ID INTEGER PRIMARY KEY,
    FIRSTNAME VARCHAR2(100),
    LASTNAME VARCHAR2(100),
    USERNAME VARCHAR2(100) NOT NULL,
    PASS_WORD VARCHAR2(100) NOT NULL,
    MANAGER_ID INTEGER NOT NULL
);
/
CREATE TABLE REIMBURSEMENT(
  REIM_ID INTEGER PRIMARY KEY,
  EMPLOYEE_ID INTEGER NOT NULL,
  IMAGE BLOB,
  AMOUNT NUMBER(6,2) DEFAULT 0.00,
  DATETIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  MANAGER_ID INTEGER NOT NULL,
  STATUS NUMBER(1) NOT NULL
);
/
CREATE TABLE MANAGER_SERVICE(
    MANAGER_ID INTEGER  NOT NULL,
    REIM_ID INTEGER PRIMARY KEY NOT NULL,
    DECISION NUMBER(1),
    DATETIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);
/
ALTER TABLE REIMBURSEMENT
MODIFY STATUS NUMBER(1) DEFAULT 0;
/
ALTER TABLE EMPLOYEE MODIFY USERNAME VARCHAR(101);
/
ALTER TABLE REIMBURSEMENT
ADD CONSTRAINT FK_EMPL_REIM
FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID);
/
ALTER TABLE MANAGER_SERVICE
ADD CONSTRAINT FK_MANAGER
FOREIGN KEY(MANAGER_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID);
/
ALTER TABLE REIMBURSEMENT
  ADD PURPOSE varchar2(50);
/
CREATE SEQUENCE SQ_EMPLOYEE_PK
START WITH 1
INCREMENT BY 1;
/
CREATE SEQUENCE SQ_REIMBURSEMENT_PK
START WITH 1
INCREMENT BY 1;
/
--CREATE TRIGGERS FOR THE SEQUENCES--
CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE
BEFORE INSERT ON EMPLOYEE --SPECIFY WHICH DML OPERATION, BEFORE/AFTER, AND TABLE
FOR EACH ROW
BEGIN
    SELECT SQ_EMPLOYEE_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSEMENT
BEFORE INSERT ON REIMBURSEMENT --SPECIFY WHICH DML OPERATION, BEFORE/AFTER, AND TABLE
FOR EACH ROW
BEGIN
    SELECT SQ_REIMBURSEMENT_PK.NEXTVAL INTO :NEW.REIM_ID FROM DUAL;
END;
/
--Insert values into table for testing--
INSERT INTO EMPLOYEE(FIRSTNAME, LASTNAME, USERNAME, PASS_WORD, MANAGER_ID)
VALUES ('EDGAR','PADILLA', 'Padilla157', '12345',3);
/
INSERT INTO EMPLOYEE(FIRSTNAME, LASTNAME, USERNAME, PASS_WORD, MANAGER_ID)
VALUES ('BERNIE','SANDERS', 'Sanders2020', '12345',1);
/
INSERT INTO EMPLOYEE(FIRSTNAME, LASTNAME, USERNAME, PASS_WORD, MANAGER_ID)
VALUES ('Beto','ORouke', 'Beto135', '123295',2);
/
INSERT INTO REIMBURSEMENT(EMPLOYEE_ID, AMOUNT,MANAGER_ID,STATUS)
VALUES (2,20.34, 2, 1);
/
INSERT INTO REIMBURSEMENT(REIM_ID,EMPLOYEE_ID, AMOUNT, MANAGER_ID, STATUS) VALUES(1,1,365.44,2,0);

SELECT R.REIM_ID, R.EMPLOYEE_ID, R.MANAGER_ID, E.FIRSTNAME, E.LASTNAME, R.STATUS, R.AMOUNT, R.DATETIME
FROM REIMBURSEMENT R 
INNER JOIN EMPLOYEE E 
ON R.EMPLOYEE_ID = E.EMPLOYEE_ID 
WHERE R.EMPLOYEE_ID = 1;
/
INSERT INTO REIMBURSEMENT(REIM_ID,EMPLOYEE_ID, AMOUNT, MANAGER_ID, PURPOSE) VALUES(1,1,473.32,3,'TRAVEL EXPENSE');
/
INSERT INTO REIMBURSEMENT(EMPLOYEE_ID, AMOUNT, MANAGER_ID, PURPOSE) VALUES(1,345.81,2,'Traveling');
/
UPDATE EMPLOYEE SET USERNAME = 'Edgar24' WHERE EMPLOYEE_ID = 1;
/
UPDATE EMPLOYEE SET MANAGER_ID = 1 WHERE EMPLOYEE_ID=1;
SELECT * FROM EMPLOYEE;
SELECT MANAGER_ID, EMPLOYEE_ID FROM EMPLOYEE WHERE EMPLOYEE_ID = 1;